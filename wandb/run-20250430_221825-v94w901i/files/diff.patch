Submodule apex contains modified content
diff --git a/apex/setup.py b/apex/setup.py
index 4aa6616..3e369a7 100644
--- a/apex/setup.py
+++ b/apex/setup.py
@@ -37,15 +37,15 @@ def check_cuda_torch_binary_vs_bare_metal(cuda_dir):
     print("\nCompiling cuda extensions with")
     print(raw_output + "from " + cuda_dir + "/bin\n")
 
-    if (bare_metal_version != torch_binary_version):
-        raise RuntimeError(
-            "Cuda extensions are being compiled with a version of Cuda that does "
-            "not match the version used to compile Pytorch binaries.  "
-            "Pytorch binaries were compiled with Cuda {}.\n".format(torch.version.cuda)
-            + "In some cases, a minor-version mismatch will not cause later errors:  "
-            "https://github.com/NVIDIA/apex/pull/323#discussion_r287021798.  "
-            "You can try commenting out this check (at your own risk)."
-        )
+    # if (bare_metal_version != torch_binary_version):
+    #     raise RuntimeError(
+    #         "Cuda extensions are being compiled with a version of Cuda that does "
+    #         "not match the version used to compile Pytorch binaries.  "
+    #         "Pytorch binaries were compiled with Cuda {}.\n".format(torch.version.cuda)
+    #         + "In some cases, a minor-version mismatch will not cause later errors:  "
+    #         "https://github.com/NVIDIA/apex/pull/323#discussion_r287021798.  "
+    #         "You can try commenting out this check (at your own risk)."
+    #     )
 
 
 def raise_if_cuda_home_none(global_option: str) -> None:
diff --git a/train.py b/train.py
index 213528a..e137cc8 100644
--- a/train.py
+++ b/train.py
@@ -80,8 +80,7 @@ class Solver:
         hasComplexEVal, feas, outputs, sigma_w_inv_b = net(inputs, targets, epoch)
     
         if hasComplexEVal:
-            if self.local_rank == 0:
-                print(f'Complex Eigenvalues found, skipping batch {batch_idx}')
+            print(f'Complex Eigenvalues found, skipping batch {batch_idx}')
             return None, None, None
     
         metrics = compute_wandb_metrics(outputs, sigma_w_inv_b)
@@ -299,6 +298,7 @@ def train_worker(rank, world_size, config):
             # Estimate batches per epoch
             total_samples = sum(len(self.class_to_indices[cls]) for cls in self.available_classes)
             batch_size = k_classes * n_samples
+            print("total samples", total_samples)
             self.batches_per_epoch = total_samples // batch_size
     
         def set_epoch(self, epoch: int):
diff --git a/wandb/latest-run b/wandb/latest-run
index 08e9ddd..f07cd11 120000
--- a/wandb/latest-run
+++ b/wandb/latest-run
@@ -1 +1 @@
-run-20250430_215907-4anamnlf
\ No newline at end of file
+run-20250430_221825-v94w901i
\ No newline at end of file
diff --git a/wandb/run-20250430_215907-4anamnlf/run-4anamnlf.wandb b/wandb/run-20250430_215907-4anamnlf/run-4anamnlf.wandb
index e69de29..e96792e 100644
Binary files a/wandb/run-20250430_215907-4anamnlf/run-4anamnlf.wandb and b/wandb/run-20250430_215907-4anamnlf/run-4anamnlf.wandb differ
